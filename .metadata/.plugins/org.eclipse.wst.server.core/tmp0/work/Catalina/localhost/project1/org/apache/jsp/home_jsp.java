/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/10.0.23
 * Generated at: 2023-09-06 12:32:40 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import jakarta.servlet.*;
import jakarta.servlet.http.*;
import jakarta.servlet.jsp.*;

public final class home_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final jakarta.servlet.jsp.JspFactory _jspxFactory =
          jakarta.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("jakarta.servlet");
    _jspx_imports_packages.add("jakarta.servlet.http");
    _jspx_imports_packages.add("jakarta.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile jakarta.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public jakarta.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final jakarta.servlet.http.HttpServletRequest request, final jakarta.servlet.http.HttpServletResponse response)
      throws java.io.IOException, jakarta.servlet.ServletException {

    if (!jakarta.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final jakarta.servlet.jsp.PageContext pageContext;
    jakarta.servlet.http.HttpSession session = null;
    final jakarta.servlet.ServletContext application;
    final jakarta.servlet.ServletConfig config;
    jakarta.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    jakarta.servlet.jsp.JspWriter _jspx_out = null;
    jakarta.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=EUC-KR");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"EUC-KR\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("let cate1 = [\"의류\", \"가전\", \"컴퓨터\"];\r\n");
      out.write("let cate2 = [[\"여성복\", \"남성복\", \"아동복\"], [\"TV\", \"세탁기\", \"냉장고\"], [\"데스크탑\", \"노트북\", \"주변기기\"]];\r\n");
      out.write("let cate3 = [[[\"원피스\", \"투피스\"], [\"셔츠\", \"바지\", \"남방\"],[\"내복\", \"우주복\"]], \r\n");
      out.write("	[[\"lg tv\", \"삼성 tv\", \"중소 tv\"], [\"lg 세탁기\", \"삼성 세탁기\", \"중소 세탁기\"], [\"lg 냉장고\", \"삼성 냉장고\", \"중소 냉장고\"]],\r\n");
      out.write("	[[\"lg 데스크탑\", \"삼성 데스크탑\"], [\"lg 노트북\", \"삼성 노트북\", \"중소 노트북\"],[\"프린터\", \"스피커\", \"마이크\"]]];\r\n");
      out.write("\r\n");
      out.write("//페이지 시작시 호출됨\r\n");
      out.write("window.onload = () => {\r\n");
      out.write("	let txt = \"<table style='background-color:gray'>\";\r\n");
      out.write("	for(i=0;i<cate1.length;i++){\r\n");
      out.write("		txt += \"<tr><td style='width:100px;height:40px' onmouseover='cf(\"+i+\")'>\"+cate1[i]+\"</td></tr>\";\r\n");
      out.write("	}\r\n");
      out.write("	txt += \"</table>\";\r\n");
      out.write("	let el = document.getElementById(\"cate1\");\r\n");
      out.write("	el.innerHTML = txt;\r\n");
      out.write("	//changeImg();\r\n");
      out.write("}\r\n");
      out.write("const cf = (idx) => {\r\n");
      out.write("	//alert(cate2[idx].toString());\r\n");
      out.write("	let c = cate2[idx];\r\n");
      out.write("	let txt = \"<table style='background-color:yellow'>\";\r\n");
      out.write("	for(i=0;i<c.length;i++){\r\n");
      out.write("		txt += \"<tr><td style='width:100px;height:40px' onmouseover='cf2(\"+idx+\",\"+i+\")'>\"+c[i]+\"</td></tr>\";\r\n");
      out.write("	}\r\n");
      out.write("	txt += \"</table>\";\r\n");
      out.write("	let el = document.getElementById(\"cate2\");\r\n");
      out.write("	el.innerHTML = txt;\r\n");
      out.write("	el.style.display='';\r\n");
      out.write("}\r\n");
      out.write("const cf2 = (i, j) => {\r\n");
      out.write("	//alert(cate3[i][j].toString());\r\n");
      out.write("	let c = cate3[i][j];\r\n");
      out.write("	let txt = \"<table style='background-color:orange'>\";\r\n");
      out.write("	for(i=0;i<c.length;i++){\r\n");
      out.write("		txt += \"<tr><td style='width:100px;height:40px' onclick='cf3()'>\"+c[i]+\"</td></tr>\";\r\n");
      out.write("	}\r\n");
      out.write("	txt += \"</table>\";\r\n");
      out.write("	let el = document.getElementById(\"cate3\");\r\n");
      out.write("	el.innerHTML = txt;\r\n");
      out.write("	el.style.display='';\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("const cf3 = () =>{\r\n");
      out.write("	let txt = \"<table>\"\r\n");
      out.write("	let e = document.getElementById(\"content\");\r\n");
      out.write("	for(i=0;i<10;i++){\r\n");
      out.write("		txt += \"<tr><td style ='width:100%; height:100px; font-size:50px;'>\" + i + \"번째 상품입니다.</td></tr>\";\r\n");
      out.write("	}\r\n");
      out.write("	txt += \"</table>\";\r\n");
      out.write("	e.innerHTML = txt;\r\n");
      out.write("}\r\n");
      out.write("const a = () => {\r\n");
      out.write("	let el = document.getElementById(\"cate1\");\r\n");
      out.write("	el.style.display='';\r\n");
      out.write("}\r\n");
      out.write("const b = (type) => {\r\n");
      out.write("	let el1 = document.getElementById(\"cate1\");\r\n");
      out.write("	let el2 = document.getElementById(\"cate2\");\r\n");
      out.write("	let el3 = document.getElementById(\"cate3\");\r\n");
      out.write("	\r\n");
      out.write("	switch(type){\r\n");
      out.write("	case 1:\r\n");
      out.write("		el1.style.display='none';\r\n");
      out.write("		el2.style.display='none';\r\n");
      out.write("		el3.style.display='none';\r\n");
      out.write("		break;\r\n");
      out.write("	case 2:\r\n");
      out.write("		el2.style.display='';\r\n");
      out.write("		el3.style.display='';\r\n");
      out.write("		break;\r\n");
      out.write("	case 3:\r\n");
      out.write("		el3.style.display='';\r\n");
      out.write("		break;\r\n");
      out.write("	}\r\n");
      out.write("}\r\n");
      out.write("let imgs = [\"img2.jpg\", \"img3.jpg\", \"img4.jpg\", \"img5.jpg\", \"img6.jpg\"];\r\n");
      out.write("let imgCnt = 0;\r\n");
      out.write("const changeImg = () => {\r\n");
      out.write("	let el = document.getElementById(\"imgdiv\");\r\n");
      out.write("	el.src = \"img/\"+imgs[imgCnt%imgs.length];\r\n");
      out.write("	imgCnt++;\r\n");
      out.write("	let id = setTimeout(changeImg, 1000);//param1:호출할 함수명, param2:딜레이시간\r\n");
      out.write("}\r\n");
      out.write("</script>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("	\r\n");
      out.write("		<div id='cate1' style='position: absolute; top: 80px; left: 10px; display: none'\r\n");
      out.write("			onmouseover=\"a()\"></div>\r\n");
      out.write("		<div id='cate2' style='position: absolute; top: 80px; left: 110px; display: none'\r\n");
      out.write("			onmouseover=\"b(2)\"></div>\r\n");
      out.write("		<div id='cate3' style='position: absolute; top: 80px; left: 210px; display: none'\r\n");
      out.write("			onmouseover=\"b(3)\"></div>\r\n");
      out.write("		<table border=\"1\">\r\n");
      out.write("			<tr>\r\n");
      out.write("				<td style=\"width: 700px; height: 200px\">\r\n");
      out.write("					<div style=\"width: 70px; height: 70px; background-color: blue; color: white\"\r\n");
      out.write("						onmouseover=\"a()\" onmouseout=\"b(1)\">카테고리</div> <img src=\"\" id=\"imgdiv\" style=\"width: 700px; height: 180px\">\r\n");
      out.write("\r\n");
      out.write("				</td>\r\n");
      out.write("			</tr>\r\n");
      out.write("			<tr>\r\n");
      out.write("				<td style=\"width: 700px; height: 500px\">\r\n");
      out.write("					<div id = \"content\">\r\n");
      out.write("					</div>\r\n");
      out.write("				</td>\r\n");
      out.write("			</tr>\r\n");
      out.write("		</table>\r\n");
      out.write("	\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof jakarta.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
